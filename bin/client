#!/usr/bin/env php

<?php
if (!ini_get('date.timezone')) {
    ini_set('date.timezone', 'UTC');
}

foreach (array(__DIR__ . '/../../../autoload.php', __DIR__ . '/../../vendor/autoload.php', __DIR__ . '/../vendor/autoload.php') as $file) {
    if (file_exists($file)) {
        define('PHPWORLD_COMPOSER_INSTALL', $file);
        break;
    }
}

unset($file);

if (!defined('PHPWORLD_COMPOSER_INSTALL')) {
    fwrite(STDERR,
        'You need to set up the project dependencies using the following commands:' . PHP_EOL .
        'wget http://getcomposer.org/composer.phar' . PHP_EOL .
        'php composer.phar install' . PHP_EOL
    );
    die(1);
}

require PHPWORLD_COMPOSER_INSTALL;

use React\EventLoop;
use React\Socket;
use React\Stream;
use PhpWorld\Messages;

$loop = EventLoop\Factory::create();
$connector = new Socket\Connector($loop);

// initialize request object
$request = new Messages\Request();

// request object building




// request object finished

// initialize response object
$response = new Messages\Response();

$connector->connect('127.0.0.1:8008')->then(function (Socket\ConnectionInterface $conn) use ($loop, $request, $response) {
    $conn->write(
        // encode request payload
        $request->serializeToString()
    );
    $conn->on('data', function ($data) use ($response) {
        // decode response payload
        $response->mergeFromString($data);
    });
});

$loop->run();

if ($response->getData() != 'error') {
    // do something with your response
} else {
    // error occurred!!!!
    $error = $response->getData()->getValue();
    echo "Error: {$error->getCode()} - {$error->getMessage()}";
}
